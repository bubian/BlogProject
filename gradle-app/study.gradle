
// 详细参考：https://docs.gradle.org/current/dsl/org.gradle.api.tasks.compile.JavaCompile.html
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xdoclint:none', '-Xlint:none', '-nowarn']
    // 在单独的守护进程中启用编译
    options.fork = true
}

version = "3.2-${System.currentTimeMillis()}"
tasks.named('jar') {
    manifest {
        attributes('Implementation-Version': project.version)
    }
}

// 参考：https://docs.gradle.org/current/userguide/build_cache_concepts.html
normalization {
    runtimeClasspath {
        ignore 'build-info.properties'
    }
}

plugins.withId("kotlin-kapt") {
    kapt.useBuildCache = true
}

plugins.withId("com.android.application") { // or "com.android.library"
    android.buildTypes.debug.ext.enableCrashlytics = false
}

def currentVersionInfo = tasks.register('currentVersionInfo', CurrentVersionInfo) {
    version = project.version
    versionInfoFile = layout.buildDirectory.file('generated-resources/currentVersion.properties')
}

sourceSets.main.output.dir(currentVersionInfo.map { it.versionInfoFile.get().asFile.parentFile })

abstract class CurrentVersionInfo extends DefaultTask {
    @Input
    abstract Property<String> getVersion()

    @OutputFile
    abstract RegularFileProperty getVersionInfoFile()

    @TaskAction
    void writeVersionInfo() {
        def properties = new Properties()
        properties.setProperty('latestMilestone', version.get())
        versionInfoFile.get().asFile.withOutputStream { out ->
            properties.store(out, null)
        }
    }
}