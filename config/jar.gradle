def group_id = 'com.lib'
def module_name = project.name
//  使用gradle打包指定包名和类的jar
task clearJar(type: Delete) {
    String d = "$rootDir/repo/$group_id/$module_name"
    // printf("============path = $d")
    delete d
}


task makeSdkJar(type: Jar) {
    baseName module_name
    from('build/intermediates/classes/debug/org/cmdmac/') {
        include 'pluginsdk/impl'
        include 'gamecenter'
    }
    into('org/cmdmac/')
}
makeSdkJar.dependsOn(clearJar, build)

task autoMakeSdkJar(type: Jar) doLast {
    baseName module_name
    from('build/intermediates/classes/debug/org/cmdmac/') {
        include 'pluginsdk/impl'
        include 'gamecenter'
    }
    into('org/cmdmac/')
}
autoMakeSdkJar.dependsOn(clearJar)
// 上传仓库
apply plugin: 'maven-publish'
def default_config = project.android.defaultConfig

String ROOT_DIR = System.getProperty("user.dir")
def PROJECT_NAME = "BlogProject"
def project_dir = ROOT_DIR

if (!ROOT_DIR.endsWith(PROJECT_NAME)) {
    int index = ROOT_DIR.lastIndexOf(PROJECT_NAME)
    project_dir = ROOT_DIR.substring(0, index + PROJECT_NAME.length())
}
task uploadArchives doLast {
    repositories.mavenDeployer {
        repository(url: uri("$project_dir/repo")) //仓库的路径，此处是项目根目录下的 repo 的文件夹
        pom.groupId = group_id  //groupId ，自行定义，一般是包名
        pom.artifactId = module_name //artifactId ，自行定义
        pom.version = default_config.versionName //version 版本号
    }
}
uploadArchives.mustRunAfter(autoMakeSdkJar, makeSdkJar)

static def getGroupId(String id) {
    int index = id.findIndexOf('.')
    return id.substring(0, index)
}

task makeReleaseJar(type: Jar, dependsOn: ['assembleRelease']){
    archiveName = 'TestSdk.jar'
    from ('build/intermediates/classes/release')
    from ('../test-common/build/intermediates/classes/release')
    from (project.zipTree('../../../libs/test_api.jar'))
    destinationDir = file('build/libs')
}

