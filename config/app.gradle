apply plugin: 'com.android.application'
apply from: "$rootDir/config/android.gradle"

//参考：https://developer.android.google.cn/studio/build/gradle-tips?hl=zh-cn

def dg = null != id[project.name] && "app" != project.name
android {
    sourceSets {
        main {
            if (dg){
                java.srcDirs =  ['src/debug/java','src/main/java']
                manifest.srcFile 'src/debug/AndroidManifest.xml'
                res.srcDirs = ['src/main/res','src/debug/res']
            }
        }
    }

    signingConfigs {
        release {
            // storeFile 出于安全考虑，将签名信息放到文件中。
            File propFile = file("$rootDir/config/other/signing.properties")
            if (propFile.exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(propFile))
                def signFilePath = "$rootDir/config/other/pds.keystore"
                if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                        props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                    android.signingConfigs.release.storeFile = file(signFilePath)
                    android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                    android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                    android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
                } else {
                    android.buildTypes.release.signingConfig = null
                }
            } else {
                android.buildTypes.release.signingConfig = null
            }
        }

        debug {
            storeFile file("$rootDir/config/other/pds.keystore")
            keyAlias 'pds'
            keyPassword 'pds123'
            storePassword 'pds123'
        }
    }

    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true

            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            shrinkResources false // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 测试相关配置
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}